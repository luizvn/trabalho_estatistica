# Instalar e carregar os pacotes necessários
install.packages("dplyr")
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
# Exibir o resultado do teste Z
print(z_result)
install.packages("dplyr")
install.packages("dplyr")
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
library(dplyr)
library(BSDA)
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
setwd("e:/Users/Gabriel/Documents/GitHub/trabalho_estatistica")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(BSDA)
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
# Verificar a estrutura dos dados
str(data)
# Filtrar os dados para incluir apenas as linhas onde 'company_location' é 'US' e 'experience_level' é 'SE'
data_us_se <- data %>%
filter(company_location == "US", experience_level == "SE")
# Calcular a média populacional conhecida (média geral de 'salaries_in_usd')
pop_mean <- mean(data$salaries_in_usd, na.rm = TRUE)
library(dplyr)
library(BSDA)
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
# Verificar a estrutura dos dados
str(data)
# Verificar os primeiros valores da coluna 'salaries_in_usd'
head(data$salaries_in_usd)
# Verificar se há valores não numéricos na coluna 'salaries_in_usd'
non_numeric_values <- data$salaries_in_usd[!grepl("^\\d+$", data$salaries_in_usd)]
print(non_numeric_values)
# Converter a coluna 'salaries_in_usd' para numérica
data$salaries_in_usd <- as.numeric(as.character(data$salaries_in_usd))
# Filtrar os dados para incluir apenas as linhas onde 'company_location' é 'US' e 'experience_level' é 'SE'
data_us_se <- data %>%
filter(company_location == "US", experience_level == "SE")
# Calcular a média populacional conhecida (média geral de 'salaries_in_usd')
pop_mean <- mean(data$salaries_in_usd, na.rm = TRUE)
# Calcular o desvio padrão populacional conhecido (desvio padrão geral de 'salaries_in_usd')
pop_sd <- sd(data$salaries_in_usd, na.rm = TRUE)
# Calcular a média e outras estatísticas descritivas necessárias para a amostra filtrada
sample_mean <- mean(data_us_se$salaries_in_usd, na.rm = TRUE)
sample_size <- sum(!is.na(data_us_se$salaries_in_usd))
# Verificar a média populacional e a amostral
print(paste("Média populacional:", pop_mean))
print(paste("Média da amostra:", sample_mean))
# Realizar o teste Z
z_result <- z.test(x = data_us_se$salaries_in_usd, mu = pop_mean, sigma.x = pop_sd, alternative = "two.sided")
library(dplyr)
library(BSDA)
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
# Verificar a estrutura dos dados
str(data)
# Verificar os primeiros valores da coluna 'salaries_in_usd'
head(data$salaries_in_usd)
# Verificar se há valores não numéricos na coluna 'salaries_in_usd'
non_numeric_values <- data$salaries_in_usd[!grepl("^\\d+$", data$salaries_in_usd)]
print(non_numeric_values)
# Converter a coluna 'salaries_in_usd' para numérica
data$salaries_in_usd <- as.numeric(as.character(data$salaries_in_usd))
# Filtrar os dados para incluir apenas as linhas onde 'company_location' é 'US' e 'experience_level' é 'SE'
data_us_se <- data %>%
filter(experience_level == "SE")
# Calcular a média populacional conhecida (média geral de 'salaries_in_usd')
pop_mean <- mean(data$salaries_in_usd, na.rm = TRUE)
# Filtrar os dados para incluir apenas as linhas onde 'company_location' é 'US' e 'experience_level' é 'SE'
data_us_se <- data %>%
filter(experience_level == "SE")
# Calcular a média populacional conhecida (média geral de 'salaries_in_usd')
pop_mean <- mean(data$salaries_in_usd, na.rm = TRUE)
library(dplyr)
library(BSDA)
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
# Verificar a estrutura dos dados
str(data)
# Verificar os primeiros valores da coluna 'salaries_in_usd'
head(data$salary_in_usd)
# Verificar se há valores não numéricos na coluna 'salaries_in_usd'
non_numeric_values <- data$salary_in_usd[!grepl("^\\d+$", data$salary_in_usd)]
print(non_numeric_values)
# Converter a coluna 'salaries_in_usd' para numérica
data$salary_in_usd <- as.numeric(as.character(data$salary_in_usd))
# Filtrar os dados para incluir apenas as linhas onde 'company_location' é 'US' e 'experience_level' é 'SE'
data_us_se <- data %>%
filter(experience_level == "SE")
# Calcular a média populacional conhecida (média geral de 'salaries_in_usd')
pop_mean <- mean(data$salary_in_usd, na.rm = TRUE)
# Calcular o desvio padrão populacional conhecido (desvio padrão geral de 'salaries_in_usd')
pop_sd <- sd(data$salary_in_usd, na.rm = TRUE)
# Calcular a média e outras estatísticas descritivas necessárias para a amostra filtrada
sample_mean <- mean(data_us_se$salary_in_usd, na.rm = TRUE)
sample_size <- sum(!is.na(data_us_se$salary_in_usd))
# Verificar a média populacional e a amostral
print(paste("Média populacional:", pop_mean))
print(paste("Média da amostra:", sample_mean))
# Realizar o teste Z
z_result <- z.test(x = data_us_se$salary_in_usd, mu = pop_mean, sigma.x = pop_sd, alternative = "two.sided")
# Exibir o resultado do teste Z
print(z_result)
# Calcular o desvio padrão populacional conhecido (desvio padrão geral de 'salaries_in_usd')
pop_sd <- sd(data$salary_in_usd, na.rm = TRUE)
print(paste("Desvio padrão: ", pop_sd))
library(BSDA)
# Ler o arquivo CSV
data <- read.csv("salaries.csv")
# Verificar os primeiros valores da coluna 'salaries_in_usd'
head(data$salary_in_usd)
# Verificar se há valores não numéricos na coluna 'salaries_in_usd'
non_numeric_values <- data$salary_in_usd[!grepl("^\\d+$", data$salary_in_usd)]
# Converter a coluna 'salaries_in_usd' para numérica
data$salary_in_usd <- as.numeric(as.character(data$salary_in_usd))
# Filtrar os dados para incluir apenas as e 'experience_level' é 'SE'
data_us_se <- data %>%
filter(experience_level == "SE")
# Calcular a média populacional conhecida (média geral de 'salaries_in_usd')
pop_mean <- mean(data$salary_in_usd, na.rm = TRUE)
# Calcular o desvio padrão populacional conhecido (desvio padrão geral de 'salaries_in_usd')
pop_sd <- sd(data$salary_in_usd, na.rm = TRUE)
print(paste("Desvio padrão: ", pop_sd))
# Calcular a média e outras estatísticas descritivas necessárias para a amostra filtrada
sample_mean <- mean(data_us_se$salary_in_usd, na.rm = TRUE)
sample_size <- sum(!is.na(data_us_se$salary_in_usd))
# Verificar a média populacional e a amostral
print(paste("Média populacional:", pop_mean))
print(paste("Média da amostra:", sample_mean))
# Realizar o teste Z
z_result <- z.test(x = data_us_se$salary_in_usd, mu = pop_mean, sigma.x = pop_sd, alternative = "two.sided")
# Exibir o resultado do teste Z
print(z_result)
# Filtrar os dados para incluir apenas as e 'experience_level' é 'SE'
data_us_se <- data %>%
filter(experience_level == "SE")
# Calcular a média populacional conhecida (média geral de 'salaries_in_usd')
pop_mean <- mean(data$salary_in_usd, na.rm = TRUE)
# Calcular o desvio padrão populacional conhecido (desvio padrão geral de 'salaries_in_usd')
pop_sd <- sd(data$salary_in_usd, na.rm = TRUE)
print(paste("Desvio padrão: ", pop_sd))
# Calcular a média e outras estatísticas descritivas necessárias para a amostra filtrada
sample_mean <- mean(data_us_se$salary_in_usd, na.rm = TRUE)
sample_size <- sum(!is.na(data_us_se$salary_in_usd))
# Verificar a média populacional e a amostral
print(paste("Média populacional:", pop_mean))
print(paste("Média da amostra:", sample_mean))
# Realizar o teste Z
z_result <- z.test(x = data_us_se$salary_in_usd, mu = pop_mean, sigma.x = pop_sd, alternative = "two.sided")
# Exibir o resultado do teste Z
print(z_result)
